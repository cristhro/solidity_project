/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LegalETH, LegalETHInterface } from "../LegalETH";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SYMBOL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "managerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "myBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040805180820182526008815267098cacec2d88aa8960c31b6020808301918252835180850190945260048452630988aa8960e31b90840152815191929161005b91600391610089565b50805161006f906004906020840190610089565b5050600580546001600160a01b031916331790555061015d565b82805461009590610122565b90600052602060002090601f0160209004810192826100b757600085556100fd565b82601f106100d057805160ff19168380011785556100fd565b828001600101855582156100fd579182015b828111156100fd5782518255916020019190600101906100e2565b5061010992915061010d565b5090565b5b80821115610109576000815560010161010e565b60028104600182168061013657607f821691505b6020821081141561015757634e487b7160e01b600052602260045260246000fd5b50919050565b610b118061016c6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a3f4df7e11610097578063cf73a1bc11610066578063cf73a1bc146101e4578063dd62ed3e146101f9578063f0dda65c1461020c578063f76f8d781461022157610100565b8063a3f4df7e146101ae578063a457c2d7146101b6578063a9059cbb146101c9578063c9116b69146101dc57610100565b8063313ce567116100d3578063313ce5671461016b578063395093511461018057806370a082311461019357806395d89b41146101a657610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014357806323b872dd14610158575b600080fd5b61010d610229565b60405161011a919061080d565b60405180910390f35b6101366101313660046107c5565b6102bb565b60405161011a9190610802565b61014b6102d1565b60405161011a9190610a65565b61013661016636600461078a565b6102d7565b6101736102ee565b60405161011a9190610a6e565b61013661018e3660046107c5565b6102f3565b61014b6101a1366004610737565b61031f565b61010d610366565b61010d610375565b6101366101c43660046107c5565b610399565b6101366101d73660046107c5565b6103ec565b61014b6103f9565b6101ec610409565b60405161011a91906107ee565b61014b610207366004610758565b610418565b61021f61021a3660046107c5565b610443565b005b61010d61047b565b60606003805461023890610aa0565b80601f016020809104026020016040519081016040528092919081815260200182805461026490610aa0565b80156102b15780601f10610286576101008083540402835291602001916102b1565b820191906000526020600020905b81548152906001019060200180831161029457829003601f168201915b5050505050905090565b60006102c833848461049b565b50600192915050565b60025490565b60006102e484848461054f565b5060019392505050565b601290565b6000806102fe610656565b90506102e48185856103108589610418565b61031a9190610a7c565b61049b565b6005546000906001600160a01b031633146103555760405162461bcd60e51b815260040161034c9061092b565b60405180910390fd5b61035e8261065a565b90505b919050565b60606004805461023890610aa0565b60405180604001604052806008815260200167098cacec2d88aa8960c31b81525081565b6000806103a4610656565b905060006103b28286610418565b9050838110156103d45760405162461bcd60e51b815260040161034c906109e9565b6103e1828686840361049b565b506001949350505050565b60006102c833848461054f565b60006104043361065a565b905090565b6005546001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b0316331461046d5760405162461bcd60e51b815260040161034c9061092b565b6104778282610675565b5050565b604051806040016040528060048152602001630988aa8960e31b81525081565b6001600160a01b0383166104c15760405162461bcd60e51b815260040161034c906109a5565b6001600160a01b0382166104e75760405162461bcd60e51b815260040161034c906108a3565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610542908590610a65565b60405180910390a3505050565b6001600160a01b0383166105755760405162461bcd60e51b815260040161034c90610960565b6001600160a01b03821661059b5760405162461bcd60e51b815260040161034c90610860565b6105a683838361071b565b6001600160a01b038316600090815260208190526040902054818110156105df5760405162461bcd60e51b815260040161034c906108e5565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061063d908690610a65565b60405180910390a361065084848461071b565b50505050565b3390565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b03821661069b5760405162461bcd60e51b815260040161034c90610a2e565b6106a76000838361071b565b80600260008282546106b99190610a7c565b90915550506001600160a01b038216600081815260208190526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061070b908590610a65565b60405180910390a3610477600083835b505050565b80356001600160a01b038116811461036157600080fd5b600060208284031215610748578081fd5b61075182610720565b9392505050565b6000806040838503121561076a578081fd5b61077383610720565b915061078160208401610720565b90509250929050565b60008060006060848603121561079e578081fd5b6107a784610720565b92506107b560208501610720565b9150604084013590509250925092565b600080604083850312156107d7578182fd5b6107e083610720565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b818110156108395785810183015185820160400152820161081d565b8181111561084a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252818101527f4f6e6c7920746865206d616e616765722063616e206d696e7420746f6b656e73604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610a9b57634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680610ab457607f821691505b60208210811415610ad557634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122004169372cd91b86883dba27b258641003a1ef9668eb99afb8798081528c13f0664736f6c63430008010033";

export class LegalETH__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LegalETH> {
    return super.deploy(overrides || {}) as Promise<LegalETH>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LegalETH {
    return super.attach(address) as LegalETH;
  }
  connect(signer: Signer): LegalETH__factory {
    return super.connect(signer) as LegalETH__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LegalETHInterface {
    return new utils.Interface(_abi) as LegalETHInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LegalETH {
    return new Contract(address, _abi, signerOrProvider) as LegalETH;
  }
}
