/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LegalCase, LegalCaseInterface } from "../LegalCase";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintLegalCase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006009553480156200001657600080fd5b5060408051808201825260098152684c6567616c4361736560b81b6020808301918252835180850190945260038452621310d560ea1b9084015281519192916200006391600091620000f1565b50805162000079906001906020840190620000f1565b5050600160075550620000956200008f6200009b565b6200009f565b620001d4565b3390565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ff9062000197565b90600052602060002090601f0160209004810192826200012357600085556200016e565b82601f106200013e57805160ff19168380011785556200016e565b828001600101855582156200016e579182015b828111156200016e57825182559160200191906001019062000151565b506200017c92915062000180565b5090565b5b808211156200017c576000815560010162000181565b600281046001821680620001ac57607f821691505b60208210811415620001ce57634e487b7160e01b600052602260045260246000fd5b50919050565b61184980620001e46000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063a22cb46511610071578063a22cb46514610207578063b88d4fde1461021a578063c87b56dd1461022d578063e985e9c514610240578063f2fde38b146102535761010b565b8063715018a6146101dc5780638da5cb5b146101e457806395d89b41146101ec578063a03e537a146101f45761010b565b806323b872dd116100de57806323b872dd1461018357806342842e0e146101965780636352211e146101a957806370a08231146101bc5761010b565b806301ffc9a71461011057806306fdde0314610139578063081812fc1461014e578063095ea7b31461016e575b600080fd5b61012361011e36600461123e565b610266565b6040516101309190611380565b60405180910390f35b610141610279565b604051610130919061138b565b61016161015c3660046112bc565b61030b565b604051610130919061132f565b61018161017c366004611215565b610332565b005b610181610191366004611127565b6103d3565b6101816101a4366004611127565b61040b565b6101616101b73660046112bc565b610426565b6101cf6101ca3660046110db565b61045a565b6040516101309190611750565b61018161049e565b6101616104b2565b6101416104c1565b6101cf610202366004611276565b6104d0565b6101816102153660046111db565b610505565b610181610228366004611162565b61051b565b61014161023b3660046112bc565b61055a565b61012361024e3660046110f5565b610565565b6101816102613660046110db565b610593565b6000610271826105cd565b90505b919050565b60606000805461028890611785565b80601f01602080910402602001604051908101604052809291908181526020018280546102b490611785565b80156103015780601f106102d657610100808354040283529160200191610301565b820191906000526020600020905b8154815290600101906020018083116102e457829003601f168201915b5050505050905090565b6000610316826105f2565b506000908152600460205260409020546001600160a01b031690565b600061033d82610426565b9050806001600160a01b0316836001600160a01b0316141561037a5760405162461bcd60e51b8152600401610371906116b2565b60405180910390fd5b806001600160a01b031661038c610617565b6001600160a01b031614806103a857506103a88161024e610617565b6103c45760405162461bcd60e51b8152600401610371906116f3565b6103ce838361061b565b505050565b6103e46103de610617565b82610689565b6104005760405162461bcd60e51b81526004016103719061139e565b6103ce8383836106e8565b6103ce8383836040518060200160405280600081525061051b565b60008061043283610825565b90506001600160a01b0381166102715760405162461bcd60e51b81526004016103719061167b565b60006001600160a01b0382166104825760405162461bcd60e51b81526004016103719061157a565b506001600160a01b031660009081526003602052604090205490565b6104a6610840565b6104b0600061087f565b565b6008546001600160a01b031690565b60606001805461028890611785565b60006104da610840565b60098054600091826104eb836117c0565b9190505590506104fb33826108d1565b61027181846109c6565b610517610510610617565b8383610a46565b5050565b61052c610526610617565b83610689565b6105485760405162461bcd60e51b81526004016103719061139e565b61055484848484610ae9565b50505050565b606061027182610b1c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61059b610840565b6001600160a01b0381166105c15760405162461bcd60e51b81526004016103719061143d565b6105ca8161087f565b50565b60006001600160e01b03198216632483248360e11b1480610271575061027182610c19565b6105fb81610c59565b6105ca5760405162461bcd60e51b81526004016103719061167b565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061065082610426565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061069583610426565b9050806001600160a01b0316846001600160a01b031614806106bc57506106bc8185610565565b806106e05750836001600160a01b03166106d58461030b565b6001600160a01b0316145b949350505050565b826001600160a01b03166106fb82610426565b6001600160a01b0316146107215760405162461bcd60e51b815260040161037190611483565b6001600160a01b0382166107475760405162461bcd60e51b8152600401610371906114ff565b6107548383836001610554565b826001600160a01b031661076782610426565b6001600160a01b03161461078d5760405162461bcd60e51b815260040161037190611483565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a46103ce8383836001610554565b6000908152600260205260409020546001600160a01b031690565b610848610617565b6001600160a01b03166108596104b2565b6001600160a01b0316146104b05760405162461bcd60e51b815260040161037190611646565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166108f75760405162461bcd60e51b815260040161037190611611565b61090081610c59565b1561091d5760405162461bcd60e51b8152600401610371906114c8565b61092b600083836001610554565b61093481610c59565b156109515760405162461bcd60e51b8152600401610371906114c8565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4610517600083836001610554565b6109cf82610c59565b6109eb5760405162461bcd60e51b8152600401610371906115c3565b60008281526006602090815260409091208251610a0a92840190610fb5565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610a3a9190611750565b60405180910390a15050565b816001600160a01b0316836001600160a01b03161415610a785760405162461bcd60e51b815260040161037190611543565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610adc908590611380565b60405180910390a3505050565b610af48484846106e8565b610b0084848484610c76565b6105545760405162461bcd60e51b8152600401610371906113eb565b6060610b27826105f2565b60008281526006602052604081208054610b4090611785565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6c90611785565b8015610bb95780601f10610b8e57610100808354040283529160200191610bb9565b820191906000526020600020905b815481529060010190602001808311610b9c57829003601f168201915b505050505090506000610bca610d91565b9050805160001415610bde57509050610274565b815115610c10578082604051602001610bf8929190611300565b60405160208183030381529060405292505050610274565b6106e084610da3565b60006001600160e01b031982166380ac58cd60e01b1480610c4a57506001600160e01b03198216635b5e139f60e01b145b80610271575061027182610e0a565b600080610c6583610825565b6001600160a01b0316141592915050565b6000610c8a846001600160a01b0316610e23565b15610d8657836001600160a01b031663150b7a02610ca6610617565b8786866040518563ffffffff1660e01b8152600401610cc89493929190611343565b602060405180830381600087803b158015610ce257600080fd5b505af1925050508015610d12575060408051601f3d908101601f19168201909252610d0f9181019061125a565b60015b610d6c573d808015610d40576040519150601f19603f3d011682016040523d82523d6000602084013e610d45565b606091505b508051610d645760405162461bcd60e51b8152600401610371906113eb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506106e0565b506001949350505050565b60408051602081019091526000815290565b6060610dae826105f2565b6000610db8610d91565b90506000815111610dd85760405180602001604052806000815250610e03565b80610de284610e32565b604051602001610df3929190611300565b6040516020818303038152906040525b9392505050565b6001600160e01b031981166301ffc9a760e01b14919050565b6001600160a01b03163b151590565b60606000610e3f83610edd565b600101905060008167ffffffffffffffff811115610e6d57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e97576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ed057610ed5565b610ea1565b509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f1c5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f48576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f6657662386f26fc10000830492506010015b6305f5e1008310610f7e576305f5e100830492506008015b6127108310610f9257612710830492506004015b60648310610fa4576064830492506002015b600a83106102715760010192915050565b828054610fc190611785565b90600052602060002090601f016020900481019282610fe35760008555611029565b82601f10610ffc57805160ff1916838001178555611029565b82800160010185558215611029579182015b8281111561102957825182559160200191906001019061100e565b50611035929150611039565b5090565b5b80821115611035576000815560010161103a565b600067ffffffffffffffff80841115611069576110696117e7565b604051601f8501601f19908116603f01168101908282118183101715611091576110916117e7565b816040528093508581528686860111156110aa57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461027457600080fd5b6000602082840312156110ec578081fd5b610e03826110c4565b60008060408385031215611107578081fd5b611110836110c4565b915061111e602084016110c4565b90509250929050565b60008060006060848603121561113b578081fd5b611144846110c4565b9250611152602085016110c4565b9150604084013590509250925092565b60008060008060808587031215611177578081fd5b611180856110c4565b935061118e602086016110c4565b925060408501359150606085013567ffffffffffffffff8111156111b0578182fd5b8501601f810187136111c0578182fd5b6111cf8782356020840161104e565b91505092959194509250565b600080604083850312156111ed578182fd5b6111f6836110c4565b91506020830135801515811461120a578182fd5b809150509250929050565b60008060408385031215611227578182fd5b611230836110c4565b946020939093013593505050565b60006020828403121561124f578081fd5b8135610e03816117fd565b60006020828403121561126b578081fd5b8151610e03816117fd565b600060208284031215611287578081fd5b813567ffffffffffffffff81111561129d578182fd5b8201601f810184136112ad578182fd5b6106e08482356020840161104e565b6000602082840312156112cd578081fd5b5035919050565b600081518084526112ec816020860160208601611759565b601f01601f19169290920160200192915050565b60008351611312818460208801611759565b835190830190611326818360208801611759565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611376908301846112d4565b9695505050505050565b901515815260200190565b600060208252610e0360208301846112d4565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b60208082526029908201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616040820152683634b21037bbb732b960b91b606082015260800190565b6020808252602e908201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60408201526d32bc34b9ba32b73a103a37b5b2b760911b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526018908201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604082015260600190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b6020808252603d908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60408201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606082015260800190565b90815260200190565b60005b8381101561177457818101518382015260200161175c565b838111156105545750506000910152565b60028104600182168061179957607f821691505b602082108114156117ba57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156117e057634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146105ca57600080fdfea264697066735822122057ca967252a23e6a6c95ceff2f4de1cb5e2a37faae032f183971a7dd01dd879a64736f6c63430008010033";

export class LegalCase__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LegalCase> {
    return super.deploy(overrides || {}) as Promise<LegalCase>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LegalCase {
    return super.attach(address) as LegalCase;
  }
  connect(signer: Signer): LegalCase__factory {
    return super.connect(signer) as LegalCase__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LegalCaseInterface {
    return new utils.Interface(_abi) as LegalCaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LegalCase {
    return new Contract(address, _abi, signerOrProvider) as LegalCase;
  }
}
