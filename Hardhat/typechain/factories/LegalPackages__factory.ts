/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LegalPackages, LegalPackagesInterface } from "../LegalPackages";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_legalETH",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "PACKAGE_BASIC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PACKAGE_PREMIUM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PACKAGE_STANDARD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "packageId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyPackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getPackageDetails",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "hourUnits",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct LegalPackages.PackageInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "legalEth",
    outputs: [
      {
        internalType: "contract LegalETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "packageDetails",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "hourUnits",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200229a3803806200229a833981016040819052620000349162000395565b6040518060600160405280602681526020016200227460269139620000598162000280565b506200006e6200006862000299565b6200029d565b600480546001600160a01b0319166001600160a01b0383161790556040805160a081018252601260608201908152714261736963204c6567616c2041647669636560701b60808301528152600560208083018290526802b5e3af16b188000093830193909352600160005282528051805191927f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b92620001129284920190620002ef565b506020828101516001830155604092830151600292830155825160a0810184526015606082019081527f5374616e64617264204c6567616c20416476696365000000000000000000000060808301528152600a818301526804e1003b28d92800009381019390935260009190915260058152815180517f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733a92620001ba928492910190620002ef565b506020828101516001830155604092830151600290920191909155815160a0810183526014606082018181527f5072656d69756d204c6567616c2041647669636500000000000000000000000060808401528252818301526808ac7230489e80000092810192909252600360005260058152815180517fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc09262000262928492910190620002ef565b50602082015160018201556040909101516002909101555062000402565b805162000295906002906020840190620002ef565b5050565b3390565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620002fd90620003c5565b90600052602060002090601f0160209004810192826200032157600085556200036c565b82601f106200033c57805160ff19168380011785556200036c565b828001600101855582156200036c579182015b828111156200036c5782518255916020019190600101906200034f565b506200037a9291506200037e565b5090565b5b808211156200037a57600081556001016200037f565b600060208284031215620003a7578081fd5b81516001600160a01b0381168114620003be578182fd5b9392505050565b600281046001821680620003da57607f821691505b60208210811415620003fc57634e487b7160e01b600052602260045260246000fd5b50919050565b611e6280620004126000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c80636c435e36116100ad578063d26798cf11610071578063d26798cf1461026b578063d7c83e1814610273578063e985e9c51461027b578063f242432a1461028e578063f2fde38b146102a157610120565b80636c435e3614610213578063715018a6146102335780638da5cb5b1461023b578063a22cb46514610250578063bed7c84b1461026357610120565b806325b52acf116100f457806325b52acf146101a35780632eb2c2d6146101b657806348d3eca8146101c95780634bba0dbc146101eb5780634e1273f4146101f357610120565b8062fdd58e1461012557806301ffc9a71461014e57806302fe53051461016e5780630e89341c14610183575b600080fd5b6101386101333660046114a0565b6102b4565b6040516101459190611c3e565b60405180910390f35b61016161015c3660046115ae565b61030b565b604051610145919061180e565b61018161017c3660046115e6565b610353565b005b610196610191366004611634565b610367565b6040516101459190611819565b6101816101b136600461164c565b6103fb565b6101816101c4366004611361565b610508565b6101dc6101d7366004611634565b610566565b6040516101459392919061182c565b610138610610565b6102066102013660046114c9565b610615565b60405161014591906117cd565b610226610221366004611634565b610735565b6040516101459190611c02565b610181610830565b610243610844565b60405161014591906116f2565b61018161025e36600461146a565b610854565b61013861086a565b61024361086f565b61013861087e565b61016161028936600461132f565b610883565b61018161029c366004611407565b6108b1565b6101816102af366004611315565b610908565b60006001600160a01b0383166102e55760405162461bcd60e51b81526004016102dc906118df565b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061033c57506001600160e01b031982166303a24d0760e21b145b8061034b575061034b8261093f565b90505b919050565b61035b610958565b61036481610997565b50565b60606002805461037690611cb0565b80601f01602080910402602001604051908101604052809291908181526020018280546103a290611cb0565b80156103ef5780601f106103c4576101008083540402835291602001916103ef565b820191906000526020600020905b8154815290600101906020018083116103d257829003601f168201915b50505050509050919050565b6000828152600560205260409020600101546104295760405162461bcd60e51b81526004016102dc90611a2e565b600082815260056020526040812060020154610446908390611c91565b600480546040516323b872dd60e01b81529293506001600160a01b0316916323b872dd9161047a9133913091879101611764565b602060405180830381600087803b15801561049457600080fd5b505af11580156104a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cc9190611592565b6104e85760405162461bcd60e51b81526004016102dc906119bc565b610503338484604051806020016040528060008152506109aa565b505050565b610510610abb565b6001600160a01b0316856001600160a01b03161480610536575061053685610289610abb565b6105525760405162461bcd60e51b81526004016102dc90611929565b61055f8585858585610abf565b5050505050565b60056020526000908152604090208054819061058190611cb0565b80601f01602080910402602001604051908101604052809291908181526020018280546105ad90611cb0565b80156105fa5780601f106105cf576101008083540402835291602001916105fa565b820191906000526020600020905b8154815290600101906020018083116105dd57829003601f168201915b5050505050908060010154908060020154905083565b600181565b606081518351146106385760405162461bcd60e51b81526004016102dc90611adc565b6000835167ffffffffffffffff81111561066257634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561068b578160200160208202803683370190505b50905060005b845181101561072d576106f28582815181106106bd57634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106106e557634e487b7160e01b600052603260045260246000fd5b60200260200101516102b4565b82828151811061071257634e487b7160e01b600052603260045260246000fd5b602090810291909101015261072681611d18565b9050610691565b509392505050565b61073d61114e565b60008281526005602052604090206001015461076b5760405162461bcd60e51b81526004016102dc90611a2e565b6000828152600560205260409081902081516060810190925280548290829061079390611cb0565b80601f01602080910402602001604051908101604052809291908181526020018280546107bf90611cb0565b801561080c5780601f106107e15761010080835404028352916020019161080c565b820191906000526020600020905b8154815290600101906020018083116107ef57829003601f168201915b50505050508152602001600182015481526020016002820154815250509050919050565b610838610958565b6108426000610c9e565b565b6003546001600160a01b03165b90565b61086661085f610abb565b8383610cf0565b5050565b600281565b6004546001600160a01b031681565b600381565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6108b9610abb565b6001600160a01b0316856001600160a01b031614806108df57506108df85610289610abb565b6108fb5760405162461bcd60e51b81526004016102dc90611929565b61055f8585858585610d93565b610910610958565b6001600160a01b0381166109365760405162461bcd60e51b81526004016102dc90611899565b61036481610c9e565b6001600160e01b031981166301ffc9a760e01b14919050565b610960610abb565b6001600160a01b0316610971610844565b6001600160a01b0316146108425760405162461bcd60e51b81526004016102dc90611a5e565b805161086690600290602084019061116f565b6001600160a01b0384166109d05760405162461bcd60e51b81526004016102dc90611b6d565b60006109da610abb565b905060006109e785610ef0565b905060006109f485610ef0565b9050610a0583600089858589610c96565b6000868152602081815260408083206001600160a01b038b16845290915281208054879290610a35908490611c79565b92505081905550866001600160a01b031660006001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628989604051610a8c929190611c47565b60405180910390a4610aa383600089858589610c96565b610ab283600089898989610f49565b50505050505050565b3390565b8151835114610ae05760405162461bcd60e51b81526004016102dc90611b25565b6001600160a01b038416610b065760405162461bcd60e51b81526004016102dc90611977565b6000610b10610abb565b9050610b20818787878787610c96565b60005b8451811015610c22576000858281518110610b4e57634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110610b7a57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610bca5760405162461bcd60e51b81526004016102dc906119e4565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610c07908490611c79565b9250508190555050505080610c1b90611d18565b9050610b23565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610c729291906117e0565b60405180910390a4610c88818787878787610c96565b610c9681878787878761106e565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610d225760405162461bcd60e51b81526004016102dc90611a93565b6001600160a01b0383811660008181526001602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610d8690859061180e565b60405180910390a3505050565b6001600160a01b038416610db95760405162461bcd60e51b81526004016102dc90611977565b6000610dc3610abb565b90506000610dd085610ef0565b90506000610ddd85610ef0565b9050610ded838989858589610c96565b6000868152602081815260408083206001600160a01b038c16845290915290205485811015610e2e5760405162461bcd60e51b81526004016102dc906119e4565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610e6b908490611c79565b92505081905550876001600160a01b0316896001600160a01b0316856001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610ec1929190611c47565b60405180910390a4610ed7848a8a86868a610c96565b610ee5848a8a8a8a8a610f49565b505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610f3857634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b610f5b846001600160a01b031661113f565b15610c965760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610f949089908990889088908890600401611788565b602060405180830381600087803b158015610fae57600080fd5b505af1925050508015610fde575060408051601f3d908101601f19168201909252610fdb918101906115ca565b60015b61103e57610fea611d5f565b806308c379a014156110245750610fff611d76565b8061100a5750611026565b8060405162461bcd60e51b81526004016102dc9190611819565b505b60405162461bcd60e51b81526004016102dc90611bae565b6001600160e01b0319811663f23a6e6160e01b14610ab25760405162461bcd60e51b81526004016102dc90611851565b611080846001600160a01b031661113f565b15610c965760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906110b99089908990889088908890600401611706565b602060405180830381600087803b1580156110d357600080fd5b505af1925050508015611103575060408051601f3d908101601f19168201909252611100918101906115ca565b60015b61110f57610fea611d5f565b6001600160e01b0319811663bc197c8160e01b14610ab25760405162461bcd60e51b81526004016102dc90611851565b6001600160a01b03163b151590565b60405180606001604052806060815260200160008152602001600081525090565b82805461117b90611cb0565b90600052602060002090601f01602090048101928261119d57600085556111e3565b82601f106111b657805160ff19168380011785556111e3565b828001600101855582156111e3579182015b828111156111e35782518255916020019190600101906111c8565b506111ef9291506111f3565b5090565b5b808211156111ef57600081556001016111f4565b600067ffffffffffffffff83111561122257611222611d49565b604051611239601f8501601f191660200182611ceb565b80915083815284848401111561124e57600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b038116811461034e57600080fd5b600082601f83011261128d578081fd5b8135602061129a82611c55565b6040516112a78282611ceb565b8381528281019150858301838502870184018810156112c4578586fd5b855b858110156112e2578135845292840192908401906001016112c6565b5090979650505050505050565b600082601f8301126112ff578081fd5b61130e83833560208501611208565b9392505050565b600060208284031215611326578081fd5b61130e82611266565b60008060408385031215611341578081fd5b61134a83611266565b915061135860208401611266565b90509250929050565b600080600080600060a08688031215611378578081fd5b61138186611266565b945061138f60208701611266565b9350604086013567ffffffffffffffff808211156113ab578283fd5b6113b789838a0161127d565b945060608801359150808211156113cc578283fd5b6113d889838a0161127d565b935060808801359150808211156113ed578283fd5b506113fa888289016112ef565b9150509295509295909350565b600080600080600060a0868803121561141e578081fd5b61142786611266565b945061143560208701611266565b93506040860135925060608601359150608086013567ffffffffffffffff81111561145e578182fd5b6113fa888289016112ef565b6000806040838503121561147c578182fd5b61148583611266565b9150602083013561149581611e08565b809150509250929050565b600080604083850312156114b2578182fd5b6114bb83611266565b946020939093013593505050565b600080604083850312156114db578182fd5b823567ffffffffffffffff808211156114f2578384fd5b818501915085601f830112611505578384fd5b8135602061151282611c55565b60405161151f8282611ceb565b8381528281019150858301838502870184018b101561153c578889fd5b8896505b848710156115655761155181611266565b835260019690960195918301918301611540565b509650508601359250508082111561157b578283fd5b506115888582860161127d565b9150509250929050565b6000602082840312156115a3578081fd5b815161130e81611e08565b6000602082840312156115bf578081fd5b813561130e81611e16565b6000602082840312156115db578081fd5b815161130e81611e16565b6000602082840312156115f7578081fd5b813567ffffffffffffffff81111561160d578182fd5b8201601f8101841361161d578182fd5b61162c84823560208401611208565b949350505050565b600060208284031215611645578081fd5b5035919050565b6000806040838503121561165e578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b8381101561169c57815187529582019590820190600101611680565b509495945050505050565b60008151808452815b818110156116cc576020818501810151868301820152016116b0565b818111156116dd5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528516602082015260a0604082018190526000906117329083018661166d565b8281036060840152611744818661166d565b9050828103608084015261175881856116a7565b98975050505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906117c2908301846116a7565b979650505050505050565b60006020825261130e602083018461166d565b6000604082526117f3604083018561166d565b8281036020840152611805818561166d565b95945050505050565b901515815260200190565b60006020825261130e60208301846116a7565b60006060825261183f60608301866116a7565b60208301949094525060400152919050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602a908201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660408201526930b634b21037bbb732b960b11b606082015260800190565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252600e908201526d14185e5b595b9d0819985a5b195960921b604082015260600190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b602080825260169082015275141858dad859d948191bd95cc81b9bdd08195e1a5cdd60521b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604082015268103337b91039b2b63360b91b606082015260800190565b60208082526029908201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604082015268040dad2e6dac2e8c6d60bb1b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526034908201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606082015260800190565b600060208252825160606020840152611c1e60808401826116a7565b905060208401516040840152604084015160608401528091505092915050565b90815260200190565b918252602082015260400190565b600067ffffffffffffffff821115611c6f57611c6f611d49565b5060209081020190565b60008219821115611c8c57611c8c611d33565b500190565b6000816000190483118215151615611cab57611cab611d33565b500290565b600281046001821680611cc457607f821691505b60208210811415611ce557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611d1157611d11611d49565b6040525050565b6000600019821415611d2c57611d2c611d33565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561085157600481823e5160e01c90565b600060443d1015611d8657610851565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611db8575050505050610851565b8285019150815181811115611dd257505050505050610851565b843d8701016020828501011115611dee57505050505050610851565b611dfd60208286010187611ceb565b509094505050505090565b801515811461036457600080fd5b6001600160e01b03198116811461036457600080fdfea2646970667358221220e36b6547f7ac501c6c6cff2fcffedb0b880a19cd9bc4346fb69e672a579188c364736f6c6343000801003368747470733a2f2f6578616d706c652e636f6d2f6170692f6974656d2f7b69647d2e6a736f6e";

export class LegalPackages__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _legalETH: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LegalPackages> {
    return super.deploy(_legalETH, overrides || {}) as Promise<LegalPackages>;
  }
  getDeployTransaction(
    _legalETH: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_legalETH, overrides || {});
  }
  attach(address: string): LegalPackages {
    return super.attach(address) as LegalPackages;
  }
  connect(signer: Signer): LegalPackages__factory {
    return super.connect(signer) as LegalPackages__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LegalPackagesInterface {
    return new utils.Interface(_abi) as LegalPackagesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LegalPackages {
    return new Contract(address, _abi, signerOrProvider) as LegalPackages;
  }
}
